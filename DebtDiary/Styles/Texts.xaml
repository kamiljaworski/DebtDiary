<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DebtDiary"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!--#region TextBlocks Styles-->
    <!-- Base -->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
    </Style>

    <!-- Title bar -->
    <Style TargetType="{x:Type TextBlock}" x:Key="TitleBarStyle">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoLight}"/>
        <Setter Property="FontSize" Value="{StaticResource SmallFontSize}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
        <Setter Property="TextOptions.TextRenderingMode" Value="Aliased"/>
    </Style>

    <!-- Application Name -->
    <Style TargetType="{x:Type TextBlock}" x:Key="ApplicationName">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="18 13 18 0"/>
        <Setter Property="FontSize" Value="60"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoSemiBold}"/>
    </Style>

    <!-- Page Subtitle -->
    <Style TargetType="{x:Type TextBlock}" x:Key="PageSubtitle">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="150 10"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoLight}"/>
    </Style>

    <!-- Login/Register Panel Title -->
    <Style TargetType="{x:Type TextBlock}" x:Key="WhitePanelTitle">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource DarkGreyBrush}"/>
        <Setter Property="Margin" Value="0 30 0 5"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoSemiBold}"/>
    </Style>

    <!-- Base Form Text -->
    <Style TargetType="{x:Type TextBlock}" x:Key="BaseFormText">
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="{StaticResource DarkGreyBrush}"/>
        <Setter Property="Margin" Value="45 20 0 0"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoLight}"/>
    </Style>

    <!-- Form Message TextBlock -->
    <Style TargetType="{x:Type TextBlock}" x:Key="FormMessageTextBlock">
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="local:FormMessageProperty.Value" Value="None"/>
        <Setter Property="Opacity" Value="0"/>

        <Style.Triggers>
            <Trigger Property="local:FormMessageProperty.Value" Value="None">
                <!-- When form message is set to none then hide this textblock -->
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="0" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <!-- When form message is set to none then show this textblock -->
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Form Message Title TextBlock -->
    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseFormText}" x:Key="FormMessageTitleTextBlock">
        <Setter Property="local:FormMessageProperty.Value" Value="None"/>

        <Style.Triggers>
            <Trigger Property="local:FormMessageProperty.Value" Value="None">
                <!-- When form message is set to none then hide this textblock -->
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="{StaticResource DarkGrey}" Duration="0:0:0.2" Storyboard.TargetProperty="Foreground.Color" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <!-- When form message is set to none then show this textblock -->
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="Red" Duration="0:0:0.2" Storyboard.TargetProperty="Foreground.Color" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Spinning TextBlock -->
    <Style TargetType="{x:Type TextBlock}" x:Key="SpinningTextBlock">

        <Setter Property="FontFamily" Value="{StaticResource Segoe-MDL2}" />
        <Setter Property="Text" Value="&#xE777;" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform></RotateTransform>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Storyboard x:Key="Spin">
                <DoubleAnimation
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                    From="360"
                    To="0"
                    Duration="0:0:1.5"
                    RepeatBehavior="Forever" />
            </Storyboard>
        </Style.Resources>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="SpinStoryboard" Storyboard="{StaticResource Spin}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <!--#endregion-->

    <!--#region Base TextBox Style-->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkGreyBrush}" />
        <Setter Property="BorderThickness" Value="0 0 0 2" />
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="local:FormMessageProperty.Value" Value="None"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" x:Name="Border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" 
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Margin="0 20 0 0" Padding="5 1 5 1">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                          Foreground="{TemplateBinding Foreground}" />
                        </Border>

                        <TextBlock Grid.Row="0" x:Name="PlaceholderText" Text="{TemplateBinding Tag}" Foreground="{TemplateBinding BorderBrush}" 
                                       FontFamily="{StaticResource LatoLight}" TextAlignment="{TemplateBinding TextAlignment}" FontSize="{TemplateBinding FontSize}" 
                                       IsHitTestVisible="False" Margin="0 22 0 0" Padding="5 0 5 0"/>

                        <TextBlock Grid.Row="1" Text="{TemplateBinding local:FormMessageProperty.Value, Converter={local:FormMessageToStringConverter}}"
                                   Foreground="Red" FontFamily="{StaticResource LatoRegular}" FontSize="12" Margin="5 3 5 0" 
                                   x:Name="ErrorMessage"/>
                    </Grid>


                    <!-- Animations -->
                    <ControlTemplate.Triggers>

                        <!-- Focus animations -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="local:FormMessageProperty.Value" Value="None"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource ButtonGreen}" Duration="0:0:0.2" Storyboard.TargetProperty="BorderBrush.Color" />
                                    </Storyboard>
                                </BeginStoryboard>

                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource DarkGrey}" Duration="0:0:0.2" Storyboard.TargetProperty="BorderBrush.Color" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <!-- Placeholder Text Animations -->
                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}, Converter={local:TextToBooleanConverter}, UpdateSourceTrigger=PropertyChanged}" Value="True">

                            <!-- Go up -->
                            <DataTrigger.EnterActions>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation To="0 4 0 0" Duration="0:0:0.2" Storyboard.TargetName="PlaceholderText" Storyboard.TargetProperty="Margin" />
                                    </Storyboard>
                                </BeginStoryboard>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="14" Duration="0:0:0.2"  Storyboard.TargetName="PlaceholderText" Storyboard.TargetProperty="FontSize" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>

                            <!-- Go down -->
                            <DataTrigger.ExitActions>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation To="0 22 0 0" Duration="0:0:0.2"  Storyboard.TargetName="PlaceholderText" Storyboard.TargetProperty="Margin" />
                                    </Storyboard>
                                </BeginStoryboard>
                                
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  To="18" Duration="0:0:0.2" Storyboard.TargetName="PlaceholderText" Storyboard.TargetProperty="FontSize"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <!-- FormMessageProperty animations -->
                        <Trigger Property="local:FormMessageProperty.Value" Value="None">

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="0:0:0.2" Storyboard.TargetName="ErrorMessage" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource DarkGrey}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource DarkGrey}" Duration="0:0:0.2" Storyboard.TargetName="PlaceholderText" Storyboard.TargetProperty="Foreground.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <!-- When FormMessageProperty is other than None -->
                            <Trigger.ExitActions>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ErrorMessage" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="Red" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color" />
                                    </Storyboard>
                                </BeginStoryboard>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="Red" Duration="0:0:0.2" Storyboard.TargetName="PlaceholderText" Storyboard.TargetProperty="Foreground.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>

                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Base PasswordBox Style-->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoSemiBold}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DarkGreyBrush}" />
        <Setter Property="BorderThickness" Value="0 0 0 2" />
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="local:MonitorPasswordProperty.Value" Value="True"/>
        <Setter Property="local:FormMessageProperty.Value" Value="None"/>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" x:Name="Border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Margin="0 20 0 0" Padding="5 1 5 1">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="True" 
                                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock Grid.Row="0" x:Name="PlaceholderText" Text="{TemplateBinding Tag}" Foreground="{TemplateBinding BorderBrush}" FontFamily="{StaticResource LatoLight}"
                                   TextAlignment="{TemplateBinding HorizontalContentAlignment, Converter={local:HorizontalAlignmentToTextAlignmentConverter}}" 
                                   FontSize="{TemplateBinding FontSize}" IsHitTestVisible="False" Margin="0 22 0 0" Padding="5 0 5 0"/>


                        <TextBlock Grid.Row="1" Text="{TemplateBinding local:FormMessageProperty.Value, Converter={local:FormMessageToStringConverter}}"
                                   Foreground="Red" FontFamily="{StaticResource LatoRegular}" FontSize="12" Margin="5 3 5 0" 
                                   x:Name="ErrorMessage"/>

                        <!-- Helper blank textblock used to fix hover text animation -->
                        <TextBlock x:Name="HelperTextBlock" Visibility="{TemplateBinding local:HasTextProperty.Value, Converter={local:BooleanToVisibilityConverter}}"
                                   IsHitTestVisible="False" />
                    </Grid>

                    <ControlTemplate.Triggers>

                        <!-- Focus animations -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="local:FormMessageProperty.Value" Value="None"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource ButtonGreen}" Duration="0:0:0.2" Storyboard.TargetProperty="BorderBrush.Color" />
                                    </Storyboard>
                                </BeginStoryboard>

                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource DarkGrey}" Duration="0:0:0.2" Storyboard.TargetProperty="BorderBrush.Color" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <!-- Placeholder Text Animations -->
                        <DataTrigger Binding="{Binding ElementName=HelperTextBlock, Path=Visibility, Converter={local:VisibilityToBooleanConverter}}" Value="False">

                            <!-- Go up -->
                            <DataTrigger.EnterActions>

                                <!-- Margin -->
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="PlaceholderText" Storyboard.TargetProperty="Margin"
                                                            To="0 4 0 0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>

                                <!-- FontSize -->
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PlaceholderText" Storyboard.TargetProperty="FontSize"
                                                            To="14" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>

                            <!-- Go down -->
                            <DataTrigger.ExitActions>

                                <!-- Margin -->
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="PlaceholderText" Storyboard.TargetProperty="Margin"
                                                            To="0 22 0 0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>

                                <!-- FontSize -->
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PlaceholderText" Storyboard.TargetProperty="FontSize"
                                                            To="18" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>


                        <!-- FormMessageProperty animations -->
                        <Trigger Property="local:FormMessageProperty.Value" Value="None">

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0" Duration="0:0:0.2" Storyboard.TargetName="ErrorMessage" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource DarkGrey}" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource DarkGrey}" Duration="0:0:0.2" Storyboard.TargetName="PlaceholderText" Storyboard.TargetProperty="Foreground.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <!-- When FormMessageProperty is other than None -->
                            <Trigger.ExitActions>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ErrorMessage" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="Red" Duration="0:0:0.2" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color" />
                                    </Storyboard>
                                </BeginStoryboard>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="Red" Duration="0:0:0.2" Storyboard.TargetName="PlaceholderText" Storyboard.TargetProperty="Foreground.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>

                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region RegisterPage PasswordBox and TextBox Styles-->
    <!-- Left TextBox -->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}" x:Key="RegisterPageLeftTextBox">
        <Setter Property="Margin" Value="20 0 10 0"/>
        <Setter Property="TextAlignment" Value="Left"/>
    </Style>

    <!-- Right TextBox -->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource RegisterPageLeftTextBox}" x:Key="RegisterPageRightTextBox">
        <Setter Property="Margin" Value="10 0 20 0"/>
    </Style>

    <!-- Left PasswordBox -->
    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource {x:Type PasswordBox}}" x:Key="RegisterPageLeftPasswordBox">
        <Setter Property="Margin" Value="20 0 10 10"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <!-- Right PasswordBox -->
    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource RegisterPageLeftPasswordBox}" x:Key="RegisterPageRightPasswordBox">
        <Setter Property="Margin" Value="10 0 20 10"/>
    </Style>
    <!--#endregion-->

    <!--#region LoginPage PasswordBox and TextBox Styles -->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}" x:Key="LoginPageTextBox">
        <Setter Property="Margin" Value="20 0 20 10"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource {x:Type PasswordBox}}" x:Key="LoginPagePasswordBox">
        <Setter Property="Margin" Value="20 0 20 0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>
    <!--#endregion-->

</ResourceDictionary>