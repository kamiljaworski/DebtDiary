<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountCreatedSubtitle" xml:space="preserve">
    <value>You can log in now</value>
  </data>
  <data name="AccountCreatedTitle" xml:space="preserve">
    <value>Your account has been created</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AdditionDate" xml:space="preserve">
    <value>Addition date</value>
  </data>
  <data name="AddNewDebtor" xml:space="preserve">
    <value>Add new debtor</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="ApplicationName" xml:space="preserve">
    <value>Debt diary</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Create account</value>
  </data>
  <data name="DebtFemale" xml:space="preserve">
    <value>Owes you</value>
  </data>
  <data name="DebtMale" xml:space="preserve">
    <value>Owes you</value>
  </data>
  <data name="DebtorExist" xml:space="preserve">
    <value>This debtor has been already added</value>
  </data>
  <data name="Debtors" xml:space="preserve">
    <value>DEBTORS</value>
  </data>
  <data name="DebtsCourse" xml:space="preserve">
    <value>Debts course</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DifferentPasswords" xml:space="preserve">
    <value>Entered passwords are not the same</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="EmptyEmail" xml:space="preserve">
    <value>Enter e-mail address</value>
  </data>
  <data name="EmptyFirstName" xml:space="preserve">
    <value>Enter first name</value>
  </data>
  <data name="EmptyLastName" xml:space="preserve">
    <value>Enter last name</value>
  </data>
  <data name="EmptyPassword" xml:space="preserve">
    <value>Enter password</value>
  </data>
  <data name="EmptyRepeatedPassword" xml:space="preserve">
    <value>Repeat password</value>
  </data>
  <data name="EmptyUsername" xml:space="preserve">
    <value>Enter username</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full name</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>GENERAL</value>
  </data>
  <data name="IncorrectEmail" xml:space="preserve">
    <value>Incorrect e-mail address</value>
  </data>
  <data name="IncorrectFirstName" xml:space="preserve">
    <value>Incorrect first name</value>
  </data>
  <data name="IncorrectLastName" xml:space="preserve">
    <value>Incorrect last name</value>
  </data>
  <data name="IncorrectPassword" xml:space="preserve">
    <value>Incorrect password</value>
  </data>
  <data name="IncorrectUsername" xml:space="preserve">
    <value>Incorrect username</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="LastOperation" xml:space="preserve">
    <value>Last operation</value>
  </data>
  <data name="Loan" xml:space="preserve">
    <value>Loan</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginPageSubtitle" xml:space="preserve">
    <value>Do you need a place to store your debts information?</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="MyAccount" xml:space="preserve">
    <value>My account</value>
  </data>
  <data name="NewDebtorAddedSubtitle" xml:space="preserve">
    <value>You can now add another one</value>
  </data>
  <data name="NewDebtorAddedTitle" xml:space="preserve">
    <value>New debtor has been added</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>none</value>
  </data>
  <data name="NumberOfOperations" xml:space="preserve">
    <value>Number of operations</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Operations" xml:space="preserve">
    <value>Operations</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>Password should have 8 characters</value>
  </data>
  <data name="PersonFemale" xml:space="preserve">
    <value>She</value>
  </data>
  <data name="PersonMale" xml:space="preserve">
    <value>He</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterPageSubtitle" xml:space="preserve">
    <value>Already have an account?</value>
  </data>
  <data name="Repayment" xml:space="preserve">
    <value>Repayment</value>
  </data>
  <data name="RepeatPassword" xml:space="preserve">
    <value>Repeat password</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="TakenEmail" xml:space="preserve">
    <value>E-mail is already taken</value>
  </data>
  <data name="TakenUsername" xml:space="preserve">
    <value>Username is already taken</value>
  </data>
  <data name="UnselectedGender" xml:space="preserve">
    <value>Gender is unselected</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="WhoBorrowed" xml:space="preserve">
    <value>Who borrowed?</value>
  </data>
  <data name="WhoRepayed" xml:space="preserve">
    <value>Who repayed?</value>
  </data>
  <data name="You" xml:space="preserve">
    <value>You</value>
  </data>
  <data name="MinusDebtFemaleToFemale" xml:space="preserve">
    <value>You owe her</value>
  </data>
  <data name="MinusDebtMaleToFemale" xml:space="preserve">
    <value>You owe her</value>
  </data>
  <data name="MinusDebtFemaleToMale" xml:space="preserve">
    <value>You owe him</value>
  </data>
  <data name="MinusDebtMaleToMale" xml:space="preserve">
    <value>You owe him</value>
  </data>
  <data name="EmptyDescription" xml:space="preserve">
    <value>Enter description</value>
  </data>
  <data name="EmptyValue" xml:space="preserve">
    <value>Enter amount</value>
  </data>
  <data name="IncorrectDescription" xml:space="preserve">
    <value>Incorrect description</value>
  </data>
  <data name="IncorrectValue" xml:space="preserve">
    <value>Incorrect amount</value>
  </data>
  <data name="NegativeNumber" xml:space="preserve">
    <value>Enter positive amount</value>
  </data>
  <data name="NoDebtorsAdded" xml:space="preserve">
    <value>There is no debtors added</value>
  </data>
  <data name="NoOperationsAdded" xml:space="preserve">
    <value>There is no operations added</value>
  </data>
  <data name="NumberOfDebtors" xml:space="preserve">
    <value>Number of debtors</value>
  </data>
  <data name="SumOfDebts" xml:space="preserve">
    <value>Sum of debts</value>
  </data>
  <data name="DebtCourse" xml:space="preserve">
    <value>Debt course</value>
  </data>
  <data name="LastOperations" xml:space="preserve">
    <value>Last operations</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="CurrentPassword" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="EditProfile" xml:space="preserve">
    <value>Edit profile</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="ProfileUpdatedSubtitle" xml:space="preserve">
    <value>You can edit it again or change your password</value>
  </data>
  <data name="ProfileUpdatedTitle" xml:space="preserve">
    <value>Your profile has been updated</value>
  </data>
  <data name="RepeatNewPassword" xml:space="preserve">
    <value>Repeat new password</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="EmptyCurrentPassword" xml:space="preserve">
    <value>Enter current password</value>
  </data>
  <data name="EmptyNewPassword" xml:space="preserve">
    <value>Enter new password</value>
  </data>
  <data name="EmptyRepeatedNewPassword" xml:space="preserve">
    <value>Repeat new password</value>
  </data>
  <data name="IncorrectCurrentPassword" xml:space="preserve">
    <value>Incorrect current password</value>
  </data>
  <data name="PasswordChangedSubtitle" xml:space="preserve">
    <value>You can change it again or edit your profile</value>
  </data>
  <data name="PasswordChangedTitle" xml:space="preserve">
    <value>Your password has been changed</value>
  </data>
  <data name="DebtorEditedSubtitle" xml:space="preserve">
    <value>You can check this changes now</value>
  </data>
  <data name="DebtorEditedTitle" xml:space="preserve">
    <value>Debtor has been edited</value>
  </data>
  <data name="EditDebtor" xml:space="preserve">
    <value>Edit debtor</value>
  </data>
</root>